{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","role","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","rows","backgroundColor","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","filter","element","length","Alert","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","aboutText","body","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8b23c4f0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n          {/* <Link className=\"navbar-brand\" to=\"/\">\r\n          {props.title} */}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n              {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                Home\r\n              </Link> */}\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">\r\n                {props.aboutText}\r\n              </Link>\r\n            </li> */}\r\n          </ul>\r\n          {/* <form className=\"d-flex\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-outline-primary\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form> */}\r\n          <div\r\n            className={`form-check form-switch text-${\r\n              props.mode === \"light\" ? \"dark\" : \"light\"\r\n            }`}\r\n          >\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              role=\"switch\"\r\n              id=\"flexSwitchCheckDefault\"\r\n              onClick={props.toggleMode}\r\n            />\r\n            <label\r\n              className=\"form-check-label\"\r\n              htmlFor=\"flexSwitchCheckDefault\"\r\n            >\r\n              Enable DarkMode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\n//set proptype\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired,\r\n};\r\n\r\n//set default props\r\n// Navbar.defaultProps = {\r\n//   title: \"set title here\",\r\n//   aboutText: \"About text here\",\r\n// };\r\n","import React, { useState } from \"react\";\r\n// useSate is a hook help to create state variable\r\n// Hooks are a new addition in React 16.8 that let you use state and other react feature without writing class.\r\n\r\nexport default function TextForm(props) {\r\n  //uppercase\r\n  const handleUpClick = () => {\r\n    // console.log(\"Uppercase was clicked\" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to uppercase!\", \"success\");\r\n  };\r\n\r\n  //lowercase\r\n  const handleLoClick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to lowercase!\", \"success\");\r\n  };\r\n\r\n  //clear text\r\n  const handleClearClick = () => {\r\n    let newText = \"\";\r\n    setText(newText);\r\n    props.showAlert(\"Text cleared!\", \"success\");\r\n  };\r\n\r\n  //copy text\r\n  const handleCopy = () => {\r\n    var text = document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"copied to clipboard!\", \"success\");\r\n  };\r\n\r\n  //Remove Extra spaces\r\n  const handleExtraSpaces = () => {\r\n    let newText = text.split(/[ ]+/); //used Regex to remove spaces\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"Extra spaces removed!\", \"success\");\r\n  };\r\n\r\n  //onChange\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const [text, setText] = useState(\"\");\r\n  //   text = \"new text\"; //wrong way to change the state\r\n  //   setText(\"new text\"); //correct way to change the state\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container\"\r\n        style={{\r\n          color: props.mode === \"dark\" ? \"white\" : \"#042743\",\r\n        }}\r\n      >\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n            style={{\r\n              backgroundColor: props.mode === \"dark\" ? \"grey\" : \"white\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"#042743\",\r\n            }}\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2 my-1\" onClick={handleUpClick}>\r\n          Convert to uppercase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2 my-1\" onClick={handleLoClick}>\r\n          Convert to Lowercase\r\n        </button>\r\n        <button\r\n          className=\"btn btn-primary mx-2 my-1\"\r\n          onClick={handleClearClick}\r\n        >\r\n          Clear Text\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2 my-1\" onClick={handleCopy}>\r\n          Copy Text\r\n        </button>\r\n        <button\r\n          className=\"btn btn-primary mx-2 my-1\"\r\n          onClick={handleExtraSpaces}\r\n        >\r\n          Remove Extra Spaces\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"container my-3\"\r\n        style={{\r\n          color: props.mode === \"dark\" ? \"white\" : \"#042743\",\r\n        }}\r\n      >\r\n        <h2>Your Text Summary</h2>\r\n        <p>\r\n          {\r\n            text.split(\" \").filter((element) => {\r\n              return element.length !== 0;\r\n            }).length\r\n          }{\" \"}\r\n          <b>Words and</b> {text.length} <b>character</b>\r\n        </p>\r\n        <p>\r\n          {0.008 * text.split(\" \").length} <b>Minutes to read</b>\r\n        </p>\r\n        <h2>Preview</h2>\r\n        <p>\r\n          {text.length > 0\r\n            ? text\r\n            : \"Enter something in the  textbox to preview it here.\"}\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n  const capitalize = (word) => {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  };\r\n  return (\r\n    props.alert && (\r\n      <div\r\n        className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n        role=\"alert\"\r\n      >\r\n        <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n        {/* <button\r\n          type=\"button\"\r\n          className=\"btn-close\"\r\n          data-bs-dismiss=\"alert\"\r\n          aria-label=\"Close\"\r\n        ></button> */}\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import \"./App.css\";\r\nimport React, { useState } from \"react\";\r\n// import About from \"./components/About\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport TextForm from \"./components/TextForm\";\r\nimport Alert from \"./components/Alert\";\r\n\r\n//downloaded Router package - npm install react-router-dom\r\n//importing Router - navigate without page reload to one component to another\r\n// import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  const [mode, setMode] = useState(\"light\"); //whether dark mode is enable or not\r\n  const [alert, setAlert] = useState(null);\r\n\r\n  const showAlert = (message, type) => {\r\n    setAlert({\r\n      msg: message,\r\n      type: type,\r\n    });\r\n    setTimeout(() => {\r\n      setAlert(null);\r\n    }, 1500);\r\n  };\r\n\r\n  const toggleMode = () => {\r\n    if (mode === \"light\") {\r\n      setMode(\"dark\");\r\n      document.body.style.backgroundColor = \"#042743\";\r\n      showAlert(\"Dark mode has been enabled\", \"success\");\r\n      // document.title = \"TextUtils - Dark Mode\";\r\n    } else {\r\n      setMode(\"light\");\r\n      document.body.style.backgroundColor = \"white\";\r\n      showAlert(\"Light mode has been enabled\", \"success\");\r\n      // document.title = \"TextUtils - Light Mode\";\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      {/* <Router> */}\r\n      <Navbar\r\n        title=\"TextUtils\"\r\n        aboutText=\"About Us\"\r\n        mode={mode}\r\n        toggleMode={toggleMode}\r\n      />\r\n\r\n      {/* Alert */}\r\n      <Alert alert={alert} />\r\n\r\n      {/* for default props */}\r\n      {/* <Navbar /> */}\r\n      <div className=\"container my-3\">\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        {/* <Switch>\r\n            <Route exact path=\"/about\">\r\n              <About />\r\n            </Route> */}\r\n        {/* \r\n            To Navigate and complete match use \"exact path\" bcz only \"path\" does partial matching \r\n            EX- /user --> compoenent1\r\n                /user/home -->component2\r\n            */}\r\n        {/* <Route exact path=\"/\">\r\n              <TextForm\r\n                showAlert={showAlert}\r\n                heading=\"Enter the text to analyse below\"\r\n                mode={mode}\r\n              />\r\n            </Route>\r\n          </Switch> */}\r\n\r\n        <TextForm\r\n          showAlert={showAlert}\r\n          heading=\"Enter the text to analyse below\"\r\n          mode={mode}\r\n        />\r\n        {/* <About /> */}\r\n      </div>\r\n      {/* </Router> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n"],"sourceRoot":""}